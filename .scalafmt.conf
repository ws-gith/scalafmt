version = "3.8.3"
runner.dialect = scala3
maxColumn = 120


// Indentation and formatting
indent {
  main = 2
  callSite = 2
  defnSite = 2
  ctorSite = 2
  matchSite = 2
  caseSite = 2
  extendSite = 2
  withSiteRelativeToExtends = 2
  commaSiteRelativeToExtends = 2
}

// Alignment settings
align {
  preset = more
  stripMargin = true
  arrowEnumeratorGenerator = true
  closeParenSite = true
  openParenCallSite = true
  multiline = true
  tokens = [
    {code = ":", owner = "Term.Param"}
    {code = "extends", owner = "Defn.(Class|Object|Trait)"}
    {code = "with", owner = "Defn.(Class|Object|Trait)"}
    { code = "<-", owner = "Enumerator.Generator" }
    { code = "=>", owner = "Case" }
    { code = "->", owner = "Term.ApplyInfix" }     
    { code = "=", owner = "Defn.(Val|Var|Def)" }
    { code = "extends", owner = "Defn.(Class|Object|Trait)" }
    { code = "->", owner = "Term.ApplyInfix" }
    { code = "%", owner = "Term.ApplyInfix" }
    { code = "%%", owner = "Term.ApplyInfix" }
    { code = "<-", owner = "Enumerator.Generator" }
    { code = "|", owner = "Term.ApplyInfix" }
    { code = "&", owner = "Term.ApplyInfix" }
    { code = "=>", owner = "Type.Function" }
    { code = ":=", owner = "Term.ApplyInfix" }
    { code = "<=", owner = "Term.ApplyInfix" }
    { code = ">=", owner = "Term.ApplyInfix" }
    { code = "+", owner = "Term.ApplyInfix" }
    { code = "-", owner = "Term.ApplyInfix" }
    { code = "*", owner = "Term.ApplyInfix" }
    { code = "/", owner = "Term.ApplyInfix" }
  ]
}

# Continue on newline

// Rewrite rules
rewrite {
  rules = [
    AvoidInfix
    RedundantBraces
    RedundantParens
    PreferCurlyFors
    SortImports
    SortModifiers
  ]
  
  sortModifiers {
    order = [
      "final"
      "sealed"
      "abstract"
      "implicit"
      "override"
      "private"
      "protected"
      "lazy"
    ]
  }
}

// Vertical multiline configuration
verticalMultiline {
  atDefnSite = true
  arityThreshold = 3
}

// Spaces and newlines
spaces {
  beforeContextBoundColon = Always
  inImportCurlyBraces = true
  neverAroundInfixTypes = []
}

newlines {
  source = keep
  topLevelStatements = [before, after]
  beforeMultiline = keep
  afterCurlyLambda = never
  implicitParamListModifierPrefer = before
}

// Reasonable defaults for docstrings and comments
docstrings {
  style = Asterisk
  oneline = keep
  wrap = no
}

comments {
  wrap = trailing
}
